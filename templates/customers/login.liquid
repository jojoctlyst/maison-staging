{% capture required %}{{ 'customer.general.required_fields' | t }}{% endcapture %}
<div class="container-indent">
  <div class="container">
    <div class="tt-login-form">
      <div class="row justify-content-center">
        <div class="col bordered">
          <div class="tt-item">
            <div id="login">
              <h2 class="tt-title d-none d-md-block">{{ 'customer.login.title_login' | t }}</h2>

              <div class="form-default form-top">
                {% form 'customer_login', return_to: '/' %}
                  <div class="tt-base-color">
                {{ form.errors | default_errors }}
                </div>

                <div class="form-group">
                  <input type="email" name="customer[email]" class="form-control" id="loginInputName" placeholder=" ">
                  <label for="loginInputName">{{ 'customer.login.email' | t }}</label>
                </div>
                {% if form.password_needed %}
                <div class="form-group input-password-wrapper">
                    <input type="password" value="" name="customer[password]" class="form-control" id="loginInputPassword" placeholder=" ">
                  <label for="loginInputPassword">{{ 'customer.login.password' | t }}</label>
                  <div class="password-eye" id="password-eye-button">
                      <img src="{{ 'eye-close.svg' | asset_url }}" alt="" id="icon-eye">
                    </div>
                </div>
                {% endif %}

                  {% if form.password_needed %}
                    <div class="row justify-content-end">
                      <div class="col-auto align-self-end">
                        <div class="form-group last-form-group">
                          <ul class="additional-links">
                            <li><a href="#" onclick="showRecoverPasswordForm();return false;">{{ 'customer.login.forgot_password' | t }}</a></li>
                          </ul>
                        </div>
                      </div>
                    </div>
                  {% endif %}

                <div class="row justify-content-center">
                  <div class="col">
                    <div class="form-group last-form-group">
                      <button class="btn btn-primary-green btn-lg btn-block btn-submit" type="submit" id="btn-login">{{ 'customer.login.sign_in' | t }}</button>
                    </div>
                  </div>
                </div>

                {% endform %}

                <div class="social-login-container">
                  <div class="wrapper">
                    <div class="row break-line">
                      <div class="line"></div>
                      <h2 class="title">atau login dengan</h2>
                      <div class="line"></div>
                    </div>
                    <div class='row oxi-social-login'></div>
                    <div class="row justify-content-center">
                      <div class="col-auto">
                        <div class="form-group register-label">
                          <div>{{ 'customer.login.new_customer_description' | t }}
                            <a href="/account/register"><u>{{ 'customer.login.new_customer_continue' | t }}</u>
                            </a>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div id="recover-password" style="display:none;" class="wrap">
              <h2 class="tt-title mb-1 d-none d-md-block">{{ 'customer.login.reset_password' | t }}</h2>
              <div class="mb-2">{{ 'customer.login.reset_password_subtext' | t }}</div>

              <div class="form-default form-top">
                {% form 'recover_customer_password', return_to: '/pages/reset-password-email-send' %}

                <div class="tt-base-color">
                {{ form.errors | default_errors }}
                </div>

                <div class="form-group mb-2">
                  <input type="email" value="" name="email" class="form-control" id="loginInputEmail" placeholder=" " autocorrect="off" autocapitalize="off" required>
                  <label for="loginInputEmail">{{ 'customer.login.email' | t }}</label>
                </div>
                
                <div class="row justify-content-center">
                  <div class="col">
                    <div class="form-group">
                      <button class="btn btn-primary-green btn-lg btn-block btn-submit" type="button" id="btn-reset-password">{{ 'customer.login.submit_recover' | t }}</button>
                    </div>
                  </div>
                </div>
                {% endform %}
              </div>
            </div>
            
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script type="text/javascript">
  const eyeButton = document.getElementById("password-eye-button");
  eyeButton.onclick = function () {
    const eyeOff = '{{ 'eye-close.svg' | asset_url }}';
    const eyeOn = '{{ 'eye-open.svg' | asset_url }}';
    const inputPassword = document.getElementById("loginInputPassword");
    const eyeImage = document.getElementById("icon-eye");
    if (inputPassword.type === "password") {
      inputPassword.type = "text";
      eyeImage.src = eyeOn;
    } else {
      inputPassword.type = "password";
      eyeImage.src = eyeOff;
    }
  }


  function checkIfEmail(str) {
    // Regular expression to check if string is email
    const regexExp = /^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/gi;
    return regexExp.test(str);
  }

  function checkResetPasswordAttempt() {
    const cookiesName = 'reset_password_attempt';
    let attempt = $.cookie(cookiesName) || 0;
    const attemptLimit = 2;
    return {
      attempt,
      isAttemptReach: attempt >= attemptLimit
    };
  }

  function showToastResetPassword(callbackBeforeHide) {
    $.toast({
      text: "<div class='row'><div class='col'>Anda telah mencapai batas untuk mengatur ulang password. Silakan coba lagi dalam 2 jam.</div></div>",
      allowToastClose: false,
      icon: 'info',
      position: 'top-center',
      hideAfter: 6000,
      stack: false,
      loader: false,
      beforeHide: () => {
        if (callbackBeforeHide) {
          callbackBeforeHide();
        }
      },
    });
  }

  function onLoadToastResetPassword() {
    const attemptChecker = checkResetPasswordAttempt();
    if (attemptChecker.isAttemptReach) {
      showToastResetPassword();
    }
  }

  function resetPasswordAttempt() {
    const cookiesName = 'reset_password_attempt';
    const attemptChecker = checkResetPasswordAttempt();
    let attempt = attemptChecker.attempt;
    if (!attemptChecker.isAttemptReach) {
      attempt++;
      $.cookie(cookiesName, attempt, {expires: 2 / 24, path: '/'});
      return true;
    } else {
      showToastResetPassword();
      return false;
    }
  }

  function generateErrorMessage(message) {
    const errorsContainer = $('form .tt-base-color');
    errorsContainer.find('.errors').remove();
    if (message) {
      let wrapper = '<ul class="errors"></ul>';
      wrapper = $(wrapper).append(`<li>${message}</li>`);
      errorsContainer.append(wrapper);
    }
  }

  function resetEmailValidation(email) {
    let message = '', isValid = true;
    try {
      if (email.trim().length === 0) {
        throw new Error('Email belum terisi');
      }
      if (!checkIfEmail(email)) {
        throw new Error('Format email tidak valid');
      }
    } catch (e) {
      isValid = false;
      message = e.message;
    }
    generateErrorMessage(message);
    return isValid;
  }

  $(function () {
    $('#btn-reset-password').click(function () {
      const email = $('#loginInputEmail').val();
      const isValid = resetEmailValidation(email);
      if (!isValid) return;
      $.cookie('reset_password_email', email, {expires: 1 / 24, path: '/'});
      const redirectTo = '/pages/reset-password-email-send';
      $('#recover-password input[name=return_to]').val(redirectTo);
      const checker = resetPasswordAttempt();
      if (!checker) return false;
      this.closest('form').submit();
    });
  });

  function showRecoverPasswordForm() {
    document.getElementById('recover-password').style.display = 'block';
    document.getElementById('login').style.display = 'none';
    document.getElementById('sticky-header-title').innerHTML = 'Lupa Password';
  }

  function hideRecoverPasswordForm() {
    document.getElementById('recover-password').style.display = 'none';
    document.getElementById('sticky-header-title').innerHTML = 'Login';
  }

  if (window.location.hash == '#recover') {
    showRecoverPasswordForm()
  }

  $(function () {
    $('#btn-login').click(function () {
      dataLayer.push({ecommerce: null});
      dataLayer.push({
        event: "login",
        ecommerce: {
          method: "email"
        }
      });
    });
  });
</script>